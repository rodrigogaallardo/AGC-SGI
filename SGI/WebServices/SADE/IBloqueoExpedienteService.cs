//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.17929
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Este código fuente fue generado automáticamente por wsdl, Versión=4.0.30319.17929.
// 
namespace SGI.Webservices.SADE.bloqueo_expediente {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IBloqueoExpedienteServiceSoapBinding", Namespace="http://ar.gob.gcaba.ee.services.external/")]
    public partial class IBloqueoExpedienteService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback desbloquearExpedienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback bloquearExpedienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback isBloqueadoOperationCompleted;
        
        /// <remarks/>
        public IBloqueoExpedienteService() {
            this.Url = "http://sade-mule.hml.gcba.gob.ar/EEServices/bloqueo-expediente";
        }
        
        /// <remarks/>
        public event desbloquearExpedienteCompletedEventHandler desbloquearExpedienteCompleted;
        
        /// <remarks/>
        public event bloquearExpedienteCompletedEventHandler bloquearExpedienteCompleted;
        
        /// <remarks/>
        public event isBloqueadoCompletedEventHandler isBloqueadoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ar.gob.gcaba.ee.services.external/", ResponseNamespace="http://ar.gob.gcaba.ee.services.external/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void desbloquearExpediente([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sistemaSolicitante, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string codigoEE) {
            this.Invoke("desbloquearExpediente", new object[] {
                        sistemaSolicitante,
                        codigoEE});
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindesbloquearExpediente(string sistemaSolicitante, string codigoEE, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("desbloquearExpediente", new object[] {
                        sistemaSolicitante,
                        codigoEE}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EnddesbloquearExpediente(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void desbloquearExpedienteAsync(string sistemaSolicitante, string codigoEE) {
            this.desbloquearExpedienteAsync(sistemaSolicitante, codigoEE, null);
        }
        
        /// <remarks/>
        public void desbloquearExpedienteAsync(string sistemaSolicitante, string codigoEE, object userState) {
            if ((this.desbloquearExpedienteOperationCompleted == null)) {
                this.desbloquearExpedienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OndesbloquearExpedienteOperationCompleted);
            }
            this.InvokeAsync("desbloquearExpediente", new object[] {
                        sistemaSolicitante,
                        codigoEE}, this.desbloquearExpedienteOperationCompleted, userState);
        }
        
        private void OndesbloquearExpedienteOperationCompleted(object arg) {
            if ((this.desbloquearExpedienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.desbloquearExpedienteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ar.gob.gcaba.ee.services.external/", ResponseNamespace="http://ar.gob.gcaba.ee.services.external/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void bloquearExpediente([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sistemaBloqueador, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string codigoEE) {
            this.Invoke("bloquearExpediente", new object[] {
                        sistemaBloqueador,
                        codigoEE});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginbloquearExpediente(string sistemaBloqueador, string codigoEE, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("bloquearExpediente", new object[] {
                        sistemaBloqueador,
                        codigoEE}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndbloquearExpediente(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void bloquearExpedienteAsync(string sistemaBloqueador, string codigoEE) {
            this.bloquearExpedienteAsync(sistemaBloqueador, codigoEE, null);
        }
        
        /// <remarks/>
        public void bloquearExpedienteAsync(string sistemaBloqueador, string codigoEE, object userState) {
            if ((this.bloquearExpedienteOperationCompleted == null)) {
                this.bloquearExpedienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbloquearExpedienteOperationCompleted);
            }
            this.InvokeAsync("bloquearExpediente", new object[] {
                        sistemaBloqueador,
                        codigoEE}, this.bloquearExpedienteOperationCompleted, userState);
        }
        
        private void OnbloquearExpedienteOperationCompleted(object arg) {
            if ((this.bloquearExpedienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bloquearExpedienteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ar.gob.gcaba.ee.services.external/", ResponseNamespace="http://ar.gob.gcaba.ee.services.external/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isBloqueado([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string codigoEE) {
            object[] results = this.Invoke("isBloqueado", new object[] {
                        codigoEE});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginisBloqueado(string codigoEE, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("isBloqueado", new object[] {
                        codigoEE}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndisBloqueado(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isBloqueadoAsync(string codigoEE) {
            this.isBloqueadoAsync(codigoEE, null);
        }
        
        /// <remarks/>
        public void isBloqueadoAsync(string codigoEE, object userState) {
            if ((this.isBloqueadoOperationCompleted == null)) {
                this.isBloqueadoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisBloqueadoOperationCompleted);
            }
            this.InvokeAsync("isBloqueado", new object[] {
                        codigoEE}, this.isBloqueadoOperationCompleted, userState);
        }
        
        private void OnisBloqueadoOperationCompleted(object arg) {
            if ((this.isBloqueadoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isBloqueadoCompleted(this, new isBloqueadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void desbloquearExpedienteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void bloquearExpedienteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void isBloqueadoCompletedEventHandler(object sender, isBloqueadoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isBloqueadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isBloqueadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}
